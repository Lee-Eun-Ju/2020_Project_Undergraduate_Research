pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
}
predict("POSCO")
predict("동국제강")
predict("KG동부제철")
predict = function(code){
library(stringr)
library(rugarch)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
KOR_price = read.csv('data/KOR_price_week.csv',stringsAsFactors = FALSE)
codex = paste0("X",code)
date = as.Date(KOR_price[,1])
price = KOR_price[,codex]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
}
predict("016380") #KG동부제철
predict = function(code){
library(stringr)
library(rugarch)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
KOR_price = read.csv('data/KOR_price_week.csv',stringsAsFactors = FALSE)
codex = paste0("X",code)
date = as.Date(KOR_price[,1])
price = KOR_price[,codex]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
}
predict("016380") #KG동부제철
predict("004020") #현대제철
predict("002240") #고려제강
predict("007700") #F&F
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
KOR_price = read.csv('data/KOR_price_week.csv',stringsAsFactors = FALSE)
date = as.Date(KOR_price[,1])
date = as.Date(KOR_price[,1])
price = KOR_price[, "001230"]
data = data.frame(date,price)
price = KOR_price[, "X001230"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
a = auto.arima(pr_ts_train)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X007700"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X093050"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X020000"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X105630"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X031430"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X003490"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X020560"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(0,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(0,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(2000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(2000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X180640"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
date = as.Date(KOR_price[,1])
price = KOR_price[, "X047810"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(20000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(20000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(15000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(15000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X012450"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(15000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(15000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X001230"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(15000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(15000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(min(pr_ts_train),max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(min(pr_ts_train),max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(3000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(3000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X002240"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(15000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(15000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
date = as.Date(KOR_price[,1])
price = KOR_price[, "X016380"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(0,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(0,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X004020"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(0,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(0,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
date = as.Date(KOR_price[,1])
price = KOR_price[, "X180640"]
data = data.frame(date,price)
data = data[39:499,]
data_ts = ts(data$price,start=c(2012,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2012,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2012,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2012,1),frequency=52)
plot(tx,ylim=c(0,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(0,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
pr_ts_train
price = KOR_price[, "X180640"]
price
date = as.Date(KOR_price[,1])
price = KOR_price[, "X180640"]
data = data.frame(date,price)
data = data[143:499,]
data_ts = ts(data$price,start=c(2014,1),frequency=52)
pr_ts_train = window(data_ts, start=c(2014,1), end=c(2019,52))
pr_ts_test = window(data_ts, start=c(2020,1),end=c(2020,45))
a = auto.arima(pr_ts_train)
spec <- ugarchspec(variance.model = list( garchOrder = c(1, 1),
model = "fGARCH", submodel="GARCH"),
mean.model     = list(armaOrder = c(a$arma[1], a$arma[3])))
garch <- ugarchfit(spec = spec, data =pr_ts_train,
out.sample=45,solver.control = list(trace=0))
modelfor=ugarchforecast(garch, n.ahead = 45, n.roll=45, out.sample=45)
tx = window(data_ts, start=c(2014,1),end=c(2020,45))
fore = as.character(modelfor@forecast$seriesFor[1,])
fore = as.numeric(fore)
forecast = ts(c(pr_ts_train,fore),start=c(2014,1),frequency=52)
plot(tx,ylim=c(0,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(0,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,max(pr_ts_train)))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,max(pr_ts_train)))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,60000))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,60000))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,80000))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,80000))
plot(tx,ylim=c(10000,100000))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,100000))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
plot(tx,ylim=c(10000,120000))
par(new=TRUE)
plot(forecast, col="blue",ylim=c(10000,120000))
accuracy(modelfor@forecast$seriesFor[1,], pr_ts_test)
