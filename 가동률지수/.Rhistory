from=theta0,                   # Left endpoint of the domain
to=theta0+3.7*sigma/sqrt(n),   # Right endopint of the domain
col="blue",                    # Try different colors
main="Power Function",         # The Main Title
xlab=expression(theta),        # Label the horizontal axis
ylab=expression(gamma(theta)), # Label the vertical axis
lwd=2,                         # Line width.
add=NA)                      # TR
curve(pnorm(sqrt(n)*(x - theta0)/sigma - z.alpha),
from=theta0,
to=theta0+3.7*sigma/sqrt(n),
col="blue",
main="Power Function",
xlab=expression(theta),
ylab=expression(gamma(theta)),
lwd=2)
sigma <- 1
n <- 10
theta0 <- 0
alpha <- 0.025
z.alpha <- qnorm(1-alpha)
curve(pnorm(-z.alpha-sqrt(n)*(x - theta0)/sigma)+1-pnorm(z.alpha-sqrt(n)*(x - theta0)/sigma),
from=theta0,
to=theta0+3.7*sigma/sqrt(n),
col="blue",
main="Power Function",
xlab=expression(theta),
ylab=expression(gamma(theta)),
lwd=2)
sigma <- 1
n <- 10
theta0 <- 0
alpha <- 0.025
z.alpha <- qnorm(1-alpha)
curve(pnorm(-z.alpha-sqrt(n)*(x - theta0)/sigma)+1-pnorm(z.alpha-sqrt(n)*(x - theta0)/sigma),
from=theta0,
to=theta0+3.7*sigma/sqrt(n),
col="blue",
main="Power Function",
xlab=expression(theta),
ylab=expression(gamma(theta)),
lwd=2)
#Chapter 1 퀀트 투자의 심장: 데이터와 프로그래밍
pkg = c('magrittr', 'quantmod', 'rvest', 'httr', 'jsonlite',
'readr', 'readxl', 'stringr', 'lubridate', 'dplyr',
'tidyr', 'ggplot2', 'corrplot', 'dygraphs',
'highcharter', 'plotly', 'PerformanceAnalytics',
'nloptr', 'quadprog', 'RiskPortfolios', 'cccp',
'timetk', 'broom', 'stargazer', 'timeSeries')
new.pkg = pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg)) {
install.packages(new.pkg, dependencies = TRUE)}
#2. 부여받은 OTP를 http://file.krx.co.kr/download.jspx에 제출하여 해당 데이터 다운
#                 -> Network-download.jspx-General;Request URL
down_url = 'http://file.krx.co.kr/download.jspx'
#############################################################
###Chapter 5 금융 데이터 수집하기 (기본)
library(httr)
library(rvest)
library(readr)
#1. 원하는 항목을 쿼리로 발송하여 해당 OTP 받음
gen_otp_url = "http://marketdata.krx.co.kr/contents/COM/GenerateOTP.jspx"
gen_otp_data = list(
name = " fileDown",
filetype = "csv", #xls이지만 csv로 변경
url = "MKD/03/0303/03030103/mkd03030103",
tp_cd = "ALL",
date = "20200928",
lang = "ko",
pagePath = "/contents/MKD/03/0303/03030103/MKD03030103.jsp")
otp = POST(gen_otp_url, query = gen_otp_data) %>%
read_html() %>%
html_text()
#2. 부여받은 OTP를 http://file.krx.co.kr/download.jspx에 제출하여 해당 데이터 다운
#                 -> Network-download.jspx-General;Request URL
down_url = 'http://file.krx.co.kr/download.jspx'
down_sector = POST(down_url, query = list(code = otp),
add_headers(referer = gen_otp_url)) %>%
read_html() %>%
html_text() %>%
read_csv()
print(down_sector)
ifelse(dir.exists('data'), FALSE, dir.create('data'))
write.csv(down_sector, 'data/krx_sector.csv')
###GET방식 - 금융 실시간 속보 제목 추출
library(rvest)
library(httr)
url = 'https://finance.naver.com/news/news_list.nhn?mode=LSS2D&section_id=101&section_id2=258'
data = GET(url)
print(data)
data_title = data %>%
read_html(encoding = 'EUC-KR') %>% #해당 페이지의 HTML 내용
html_nodes('dl') %>% #해당 태그를 추출하는 함수
html_nodes('.articleSubject') %>%
html_nodes('a') %>%
html_attr('title') #속성을 추출하는 함수(title에 해당하는 부분만 추출)
print(data_title)
url = 'https://finance.naver.com/news/news_list.nhn?mode=LSS2D&section_id=101&section_id2=258'
data = GET(url)
print(data)
data_title = data %>%
read_html(encoding = 'EUC-KR') %>% #해당 페이지의 HTML 내용
html_nodes('dl') %>% #해당 태그를 추출하는 함수
html_nodes('.articleSubject') %>%
html_nodes('a') %>%
html_attr('title') #속성을 추출하는 함수(title에 해당하는 부분만 추출)
print(data_title)
f_data = function(code){
library(stringr)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
KOR_price = read.csv('data/KOR_price_week.csv',stringsAsFactors = FALSE)
codex = paste0("X",code)
date <- KOR_price[,1]
price =KOR_price[,codex]
data <- data.frame( cbind(date,price) )
data$date = as.Date(data$date)
data$price = as.character(data$price)
data$price = as.numeric(data$price)
head(data); dim(data)
data = data[39:499,] #2012년부터
}
f_data("033780")
f_data = function(code){
library(stringr)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
KOR_price = read.csv('data/KOR_price_week.csv',stringsAsFactors = FALSE)
codex = paste0("X",code)
date <- KOR_price[,1]
price =KOR_price[,codex]
data <- data.frame( cbind(date,price) )
data$date = as.Date(data$date)
data$price = as.character(data$price)
data$price = as.numeric(data$price)
data = data[39:499,] #2012년부터
}
f_data("033780")
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1, stringsAsFactors = FALSE)
KOR_ticker$'종목코드' = as.factor(str_pad(KOR_ticker$'종목코드', 6,'left', 0))
###1.수정주가 크롤링(주당)
library(httr)
library(rvest)
library(stringr)
library(xts)
library(lubridate)
library(readr)
library(dplyr)
# 주가 정리
library(stringr)
library(xts)
library(magrittr)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1)
KOR_ticker = read.csv('data/KOR_ticker.csv', row.names = 1)
r1=c(0,0,0,0,7287)
r2=c(0,0,0,1,996)
r3=c(0,0,1,0,11587)
r4=c(0,0,1,1,759)
r5=c(0,1,0,0,3246)
r6=c(0,1,0,1,973)
r7=c(0,1,1,0,6134)
r8=c(0,1,1,1,757)
r9=c(1,0,0,0,10381)
r10=c(1,0,0,1,812)
r11=c(1,0,1,0,10969)
r12=c(1,0,1,1,380)
r13=c(1,1,0,0,6123)
r14=c(1,1,0,1,1084)
r15=c(1,1,1,0,6693)
r16=c(1,1,1,1,513)
data=data.frame(rbind(r1,r2,r3,r4))
data
x=data.frame(rbind(r1,r2,r3,r4,
r5,r6,r7,r8,
r9,r10,r11,r12,
r13,r14,r15,r16))
x
colnames(x)=c('G','L','S','I','count')
model1=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x)
deviance(model1)
model1=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x,family=poisson) #로그선형모형
deviance(model1)
model2=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x,family=binomial)
model3=glm(I~G+L+S,data=x,family=binomial)#로지스틱
deviance(model3)
model1=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x,family=poisson) #로그선형모형
deviance(model1)
model2=glm(I~G+L+S,data=x,family=binomial) #로지스틱
deviance(model2)
model1=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x,family=poisson) #M3로그선형모형
deviance(model1)
model2=glm(I~G+L+S,data=x,family=binomial) #M3 로지스틱
deviance(model2)
model3=glm(count~G*I*L,G*I*S,G*L*S,I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
model3=glm(count~.-G*I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
deviance(model3)
model1=glm(count~G+L+S+I+G*I*L+G*I+I*L+I*S,data=x,family=poisson) #M3로그선형모형
deviance(model1)
model2=glm(I~G+L+S,data=x,family=binomial) #M3 로지스틱
deviance(model2)
model3=glm(count~.-G*I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
deviance(model3)
model1=glm(count~G+L+S+I+G*I+I*L+I*S+G*L*S,data=x,family=poisson) #M3로그선형모형
deviance(model1)
model2=glm(I~G+L+S,data=x,family=binomial) #M3 로지스틱
deviance(model2)
model3=glm(count~.-G*I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
deviance(model3)
model3=glm(count~.G+L+S+I+G*I+G*L+G*S+
I*L+I*S+L*S+
G*I*L+G*I*S+G*L*S+I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
model3=glm(count~G+L+S+I+G*I+G*L+G*S+
I*L+I*S+L*S+
G*I*L+G*I*S+G*L*S+I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
deviance(model3)
model1=glm(count~G+L+S+I+G*I+I*L+I*S+G*L*S,data=x,family=poisson) #M3로그선형모형
deviance(model1)
model2=glm(I~G+L+S,data=x,family=binomial) #M3 로지스틱
deviance(model2)
model3=glm(count~G+L+S+I+G*I+G*L+G*S+
I*L+I*S+L*S+
G*I*L+G*I*S+G*L*S+I*L*S,data=x,family=poisson) #(GIL,GIS,GLS,ILS)로그선형모형
deviance(model3)
setwd("C:\\Users\\eunju\\Desktop\\3학년 2학기\\학부연구생\\가동률지수")
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
data2 <- read.csv("name.csv",header=FALSE)
data2 <- read.csv("name.csv",header=FALSE)
setwd("C:\\Users\\eunju\\Desktop\\3학년 2학기\\학부연구생\\가동률지수")
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
data2 <- read.csv("name.csv",header=FALSE)
data3 <- read.csv("date.csv",header=FALSE)
date1 = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(rep(data3[i,1],nrow(data1)))
date1 = dplyr::bind_rows(date1, val)
}
str(date1)
head(date1)
data2 <- read.csv("name.csv",header=FALSE)
data2 <- read.csv("name.csv",header=FALSE)
data2 <- read.csv("name.csv",header=FALSE)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
head(name)
datare = data.frame(date1,name,datal1)
head(data1)
dim(data1)
dim(data2)
dim(data3)
head(datal1)
dim(datal1)
dim(data1)
dim(name)
setwd("C:\\Users\\eunju\\Desktop\\3학년 2학기\\학부연구생\\가동률지수")
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
head(name)
data3 <- read.csv("date.csv",header=FALSE)
date1 = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(rep(data3[i,1],nrow(data1)))
date1 = dplyr::bind_rows(date1, val)
}
str(date1)
head(date1)
datare = data.frame(date1,name,datal1)
head(datal1)
dim(datal1)
dim(name)
dim(date1)
head(name)
tail(name)
dim(data1)
dim(data2)
dim(data3)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
name
ncol(data1)
data1 <- read.csv("data.csv",header=FALSE)
dim(data1)
ncol(data1)
name = data.frame()
for (i in 1:nrow(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
head(name)
dim(name)
data3 <- read.csv("date.csv",header=FALSE)
date1 = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(rep(data3[i,1],nrow(data1)))
date1 = dplyr::bind_rows(date1, val)
}
str(date1)
head(date1)
dim(date1)
datare = data.frame(date1,name,datal1)
colnames(datare)=c("날짜", "name", "가동률지수")
head(datare)
dplyr::glimpse(datare)
boxplot(data=datare, y=가동률지수, group=name)
boxplot(data=datare, y=가동률지수, x=name)
boxplot(data=datare, y='가동률지수', x=name)
dplyr::glimpse(datare)
datare$가동률지수 = as.numeric(datare$가동률지수)
boxplot(data=datare, y='가동률지수', x=name)
boxplot(data=datare, y=datare$가동률지수, x=datare$name)
ggplot(datare, aes(x=name,group=name,y=가동률지수))+
geom_boxplot(colour=name)
library("dplyr")
library(ggplot2)
ggplot(datare, aes(x=name,group=name,y=가동률지수))+
geom_boxplot(colour=name)
class(datare)
ggplot(datare, aes(x=name,group=name,y=가동률지수))+
geom_boxplot()
data %>%
fortify.zoo %>%
plot_ly(x= ~date, y = ~price , type=box) %>%
library("dplyr")
library(plotly)
data %>%
fortify.zoo %>%
plot_ly(x= ~date, y = ~price , type=box) %>%
library("dplyr")
library(quantmod)
library(quantmod)
data %>%
fortify.zoo %>%
plot_ly(x= ~date, y = ~price , type=box) %>%
library("dplyr")
fig = datare %>%
fortify.zoo %>%
plot_ly(x= ~name, y = ~가동률지수 , type=box) %>%
fig <- fig %>% layout(boxmode = "group")
fig = datare %>%
fortify.zoo %>%
plot_ly(x= ~name, y = ~가동률지수 , type=box) %>%
fig <- fig %>% layout(boxmode = "group")
fig = datare %>%
fortify.zoo %>%
plot_ly(x= ~name, y = ~가동률지수 , type=box)
fig <- fig %>% layout(boxmode = "group")
fig
datare %>%
fortify.zoo %>%
plot_ly(x= ~name, y = ~가동률지수 , type=box)
datare %>%
plot_ly(x= ~name, y = ~가동률지수 , type=box)
datare %>%
plot_ly(x= ~name, y = ~가동률지수 ,group=~name type=box)
datare %>%
plot_ly(x= ~name, y = ~가동률지수 ,group=~name type=box)
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box") %>%
layout(boxmode = "group")
rownames(datare) = datare$날짜
ggplot(datare, aes(x=name,group=name,y=가동률지수))+
geom_boxplot()
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box") %>%
layout(boxmode = "group")
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box",
text=paste(datare$날짜, datare$가동률지수,datare$name)) %>%
layout(boxmode = "group")
datare$날짜
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
dim(data1)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:nrow(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
head(name)
dim(name)
data3 <- read.csv("date.csv",header=FALSE)
date1 = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(rep(data3[i,1],nrow(data1)))
date1 = dplyr::bind_rows(date1, val)
}
str(date1)
head(date1)
dim(date1)
datare = data.frame(date1,name,datal1)
colnames(datare)=c("날짜", "name", "가동률지수")
head(datare)
dplyr::glimpse(datare)
class(datare)
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box",
text=paste(datare$날짜, datare$가동률지수,datare$name)) %>%
layout(boxmode = "group")
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box",
text=paste(datare$날짜)) %>%
layout(boxmode = "group")
head(datare)
tail(datare)
setwd("C:\\Users\\eunju\\Desktop\\3학년 2학기\\학부연구생\\가동률지수")
data1 <- read.csv("data.csv",header=FALSE)
datal1 = data.frame()
for (j in 1:ncol(data1)) {
for (i in 1:nrow(data1)) {
val = data.frame(data1[i,j])
datal1 = dplyr::bind_rows(datal1, val)
}
}
str(datal1)
head(datal1)
dim(data1)
data2 <- read.csv("name.csv",header=FALSE)
name = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(data2)
name = dplyr::bind_rows(name, val)
}
str(name)
head(name)
dim(name)
data3 <- read.csv("date.csv",header=FALSE)
date1 = data.frame()
for (i in 1:ncol(data1)) {
val = data.frame(rep(data3[i,1],nrow(data1)))
date1 = dplyr::bind_rows(date1, val)
}
str(date1)
head(date1)
dim(date1)
datare = data.frame(date1,name,datal1)
colnames(datare)=c("날짜", "name", "가동률지수")
head(datare)
dplyr::glimpse(datare)
tail(datare)
datare %>%
plot_ly(x= ~name, y = ~가동률지수, type="box",
text=paste(datare$날짜)) %>%
layout(boxmode = "group")
